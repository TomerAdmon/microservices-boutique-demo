spec_version: 2
description: Online Boutique production-like deployment for AWS

instructions:
  source:
    store: cloud-native-application
    path: instructions/OBS.md

inputs:
  agent:
    type: agent
  service-account:
    type: string

outputs:
  cluster_endpoint: 
      value: '{{ .grains.elasticache-simple.outputs.cluster_endpoint }}'
  website-url: 
      value: '{{ .grains.app-deployment.outputs.frontend }}'
      quick: true

grains:
  base-network:
    kind: blueprint
    spec:
      source: 
        store: cloud-native-application
        path: blueprints
      agent:
        name: '{{ .inputs.agent }}'
        service-account: '{{ .inputs.service-account }}'
      outputs:
      - private_subnet_ids
      - public_subnet_ids
      - vpc_cidr
      - vpc_id
      - vpc_default_security_group_id

  rds-postgresql:
    kind: blueprint
    depends-on: base-network
    spec:
      source: 
        store: cloud-native-application
        path: blueprints
      agent:
        name: '{{ .inputs.agent }}'
        service-account: '{{ .inputs.service-account }}'
      outputs:
        - connection_string

  elasticache-simple:
    kind: blueprint
    depends-on: base-network
    spec:
      source: 
        store: cloud-native-application
        path: blueprints
      agent:
        name: '{{ .inputs.agent }}'
        service-account: '{{ .inputs.service-account }}'
      inputs:
      - cluster_size: 1
      - public_subnet_ids: '{{ .grains.base-network.outputs.public_subnet_ids }}'
      - private_subnet_ids: '{{ .grains.base-network.outputs.private_subnet_ids }}'
      - vpc_cidr: '{{ .grains.base-network.outputs.vpc_cidr }}'
      - vpc_id: '{{ .grains.base-network.outputs.vpc_id }}'
      - vpc_default_security_group_id: '{{ .grains.base-network.outputs.vpc_default_security_group_id }}'
      outputs:
        - cluster_endpoint
  
  peering: 
    kind: blueprint
    depends-on: elasticache-simple, base-network
    spec:
      source: 
        store: cloud-native-application
        path: blueprints
      agent:
        name: '{{ .inputs.agent }}'
        service-account: '{{ .inputs.service-account }}'
      inputs: 
      - peer_vpc_id: '{{ .grains.base-network.outputs.vpc_id }}'
      - vpc_peering_name: 'pcx-{{ sandboxid | downcase }}'
      outputs:
      - aws_vpc_peering_connection

  app-deployment: 
    kind: blueprint
    depends-on: elasticache-simple, peering
    spec:
      source: 
        store: cloud-native-application
        path: blueprints
      agent:
        name: '{{ .inputs.agent }}'
        service-account: '{{ .inputs.service-account }}'
      inputs: 
      - connectionString: '{{ .grains.elasticache-simple.outputs.cluster_endpoint }}'
      outputs:
      - frontend

  test-workstation: 
    kind: blueprint
    depends-on: peering
    spec:
      source: 
        store: cloud-native-application
        path: blueprints
      agent:
        name: '{{ .inputs.agent }}'
        service-account: '{{ .inputs.service-account }}'
      outputs:
      - frontend